[gd_scene load_steps=18 format=2]

[ext_resource path="res://assets/sprites/player_slots.png" type="Texture" id=1]
[ext_resource path="res://assets/sprites/player_slots_n.png" type="Texture" id=2]
[ext_resource path="res://assets/sprites/player_lamp.png" type="Texture" id=3]
[ext_resource path="res://src/ui/player_slots/player_slots.gd" type="Script" id=4]
[ext_resource path="res://assets/lights/basic_light.jpg" type="Texture" id=5]
[ext_resource path="res://src/ui/player_slots/light_2d.gd" type="Script" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[sub_resource type="VisualShaderNodeCompare" id=6]
default_input_values = [ 0, 0.0, 1, 0.34, 2, 1e-05 ]
function = 3

[sub_resource type="VisualShaderNodeCompare" id=7]
default_input_values = [ 0, 0.0, 1, 0.6, 2, 1e-05 ]
function = 5

[sub_resource type="VisualShaderNodeScalarSwitch" id=8]

[sub_resource type="VisualShaderNodeScalarSwitch" id=9]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=11]
source = 2

[sub_resource type="VisualShader" id=1]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Texture:9
	vec3 n_out9p0;
	float n_out9p1;
	{
		vec4 _tex_read = texture( TEXTURE , UV.xy );
		n_out9p0 = _tex_read.rgb;
		n_out9p1 = _tex_read.a;
	}

// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(SCREEN_UV,0.0);

// VectorDecompose:3
	float n_out3p0;
	float n_out3p1;
	float n_out3p2;
	n_out3p0 = n_out2p0.x;
	n_out3p1 = n_out2p0.y;
	n_out3p2 = n_out2p0.z;

// Compare:4
	float n_in4p1 = 0.34000;
	bool n_out4p0;
	n_out4p0=n_out3p0>=n_in4p1;

// ScalarSwitch:6
	float n_in6p1 = 1.00000;
	float n_in6p2 = 0.00000;
	float n_out6p0;
	if(n_out4p0)
	{
		n_out6p0=n_in6p1;
	}
	else
	{
		n_out6p0=n_in6p2;
	}

// Compare:5
	float n_in5p1 = 0.60000;
	bool n_out5p0;
	n_out5p0=n_out3p0<=n_in5p1;

// ScalarSwitch:7
	float n_in7p1 = 1.00000;
	float n_in7p2 = 0.00000;
	float n_out7p0;
	if(n_out5p0)
	{
		n_out7p0=n_in7p1;
	}
	else
	{
		n_out7p0=n_in7p2;
	}

// ScalarOp:8
	float n_out8p0;
	n_out8p0 = n_out6p0 * n_out7p0;

// ScalarOp:10
	float n_out10p0;
	n_out10p0 = n_out9p1 * n_out8p0;

// Output:0
	COLOR.a = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 255.75, -47 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1320, 160 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( 20, 160 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( 249.5, 178 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( 500, 80 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 500, 240 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 700, 140 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 700, 280 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 953.75, 188 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( 740, -60 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 1100, 0 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 0, 3, 0, 5, 0, 4, 0, 6, 0, 5, 0, 7, 0, 6, 0, 8, 0, 7, 0, 8, 1, 8, 0, 10, 1, 9, 1, 10, 0, 10, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[node name="PlayerSlots" type="Node2D"]
z_index = 1
script = ExtResource( 4 )

[node name="ColorRect" type="ColorRect" parent="."]
margin_left = -128.0
margin_top = -16.0
margin_right = 128.0
margin_bottom = 16.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PlayerLamp" type="Sprite" parent="."]
light_mask = 0
material = SubResource( 2 )
position = Vector2( -112.056, -0.19371 )
scale = Vector2( 0.45, 0.45 )
texture = ExtResource( 3 )

[node name="Light2D" type="Light2D" parent="PlayerLamp"]
texture = ExtResource( 5 )
energy = 2.0
range_height = 150.0
range_item_cull_mask = 15
script = ExtResource( 6 )

[node name="Timer" type="Timer" parent="PlayerLamp"]

[node name="Slots" type="Sprite" parent="."]
self_modulate = Color( 0.435294, 0.435294, 0.435294, 1 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 1 )
normal_map = ExtResource( 2 )

[node name="Tween" type="Tween" parent="."]
